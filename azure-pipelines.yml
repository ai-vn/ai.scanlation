variables:
  ELECTRON_CACHE: $(Pipeline.Workspace)/.cache/electron
  ELECTRON_BUILDER_CACHE: $(Pipeline.Workspace)/.cache/electron-builder

pool:
  vmImage: 'macOS-latest'
steps:
  - task: NodeTool@0
    displayName: Install NodeJS
    inputs:
      versionSpec: '10.x'
      checkLatest: true

  - task: RestoreAndSaveCache@1
    displayName: Restore cache based on 'yarn.lock'
    inputs:
      keyfile: '**/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock, **/azure-pipelines.yml'
      targetfolder: '**/node_modules, !**/node_modules/**/node_modules, $(ELECTRON_CACHE), $(ELECTRON_BUILDER_CACHE)'
      vstsFeed: $(artifacts)

  - script: |
      yarn --frozen-lockfile
    displayName: Install Dependencies
    condition: ne(variables['CacheRestored'], 'true')

  - script: |
      yarn lint:js --max-warnings=0
      yarn lint:css
    displayName: Analyzes Source Code

  - script: |
      yarn test --ci
      cd $(System.DefaultWorkingDirectory)/coverage
      ls
    displayName: Run Unit Tests
    continueOnError: true

  - task: PublishTestResults@2
    displayName: Publish Jest Unit Test Results
    inputs:
      testResultsFiles: junit.xml
      mergeTestResults: true
      testRunTitle: 'Jest Unit Tests'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage from Jest tests
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
      # reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
      # failIfCoverageEmpty: true

  - script: |
      yarn build
    displayName: Build
    condition: and(succeeded(), notIn(variables['Build.SourceBranch'], 'refs/heads/dev', 'refs/heads/master'))
    env:
      GH_TOKEN: $(GH_TOKEN)
      ELECTRON_CACHE: $(ELECTRON_CACHE)
      ELECTRON_BUILDER_CACHE: $(ELECTRON_BUILDER_CACHE)

  - script: |
      yarn release --mac --win
    displayName: Release (Mac & Win)
    condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/dev', 'refs/heads/master'))
    env:
      GH_TOKEN: $(GH_TOKEN)
      ELECTRON_CACHE: $(ELECTRON_CACHE)
      ELECTRON_BUILDER_CACHE: $(ELECTRON_BUILDER_CACHE)
